name: Compress Images to AVIF with Fallback
on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch
    paths:
      - '**.jpg'
      - '**.jpeg'
      - '**.png'
      - '**.webp'
jobs:
  compress-images:
    name: Compress Images to AVIF
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      # Try Calibre's image-actions first
      - name: Compress Images to AVIF with Calibre
        id: calibre-optimization
        uses: calibreapp/image-actions@main
        continue-on-error: true  # Allow fallback if this step fails
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          convertToAvif: true  # Convert all images to AVIF format
          avifQuality: 80      # AVIF quality (0-100, higher is better quality)
          convertToWebp: false # Skip other formats (WebP, etc.)
          compressOnly: true   # Only compress, don't resize
          outputDir: assets/optimized  # Save optimized images here

      # Fallback: Local optimization using optimize.js
      - name: Fallback - Optimize Images Locally
        if: steps.calibre-optimization.outcome == 'failure'
        run: |
          echo "Calibre optimization failed. Falling back to local optimization..."
          npm install sharp
          mkdir -p assets/optimized
          node optimize.js
        env:
          INPUT_DIR: assets/original  # Folder containing original images
          OUTPUT_DIR: assets/optimized  # Folder to save AVIF images

      # Commit and push optimized images
      - name: Commit and Push Optimized Images
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add assets/optimized
          git commit -m "Optimized images to AVIF"
          git push